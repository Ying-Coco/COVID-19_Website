{"ast":null,"code":"var _jsxFileName = \"/Users/cwen13/Documents/coronavirus-tracker/src/component/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        lablel: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)']\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Current State in ${country}'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/cwen13/Documents/coronavirus-tracker/src/component/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","country","dailyData","setDailyData","fetchAPI","lineChart","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","lablel","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,YAAY,CAAC,MAAMR,cAAc,EAArB,CAAZ;AACD,KAFD;;AAIAS,IAAAA,QAAQ;AACT,GANQ,EAMN,EANM,CAAT;AAQA,QAAMC,SAAS,GACXH,SAAS,CAAC,CAAD,CAAT,gBAEI,oBAAC,IAAD;AACA,IAAA,IAAI,EAAG;AACHI,MAAAA,MAAM,EAACJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAYA,IAA1B,CADJ;AAEHC,MAAAA,QAAQ,EAAE,CAAC;AACPT,QAAAA,IAAI,EAACE,SAAS,CAACK,GAAV,CAAc,CAAC;AAACG,UAAAA;AAAD,SAAD,KAAiBA,SAA/B,CADE;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AACDb,QAAAA,IAAI,EAACE,SAAS,CAACK,GAAV,CAAc,CAAC;AAACO,UAAAA;AAAD,SAAD,KAAcA,MAA5B,CADJ;AAEDH,QAAAA,KAAK,EAAE,QAFN;AAGDC,QAAAA,WAAW,EAAE,KAHZ;AAIDG,QAAAA,eAAe,EAAE,sBAJhB;AAKDF,QAAAA,IAAI,EAAE;AALL,OALO;AAFP,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAmBE,IApBN;AAuBA,QAAMG,QAAQ,GACZhB,IAAI,CAACU,SAAL,gBAEE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE;AACTJ,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADC;AAETG,MAAAA,QAAQ,EAAE,CAAC;AACTQ,QAAAA,MAAM,EAAC,QADE;AAETF,QAAAA,eAAe,EAAE,CAAE,sBAAF,EAA0B,sBAA1B,EAAkD,sBAAlD;AAFR,OAAD;AAFD,KAAX;AAMG,IAAA,OAAO,EAAE;AACVG,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OADE;AAEVC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,IAAV;AAAgBE,QAAAA,IAAI,EAAC;AAArB;AAFG,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,GAaG,IAdL;AAgBF,sBACI;AAAK,IAAA,SAAS,EAAEvB,MAAM,CAACwB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,SADL,CADJ;AAKC,CAvDD;;AAwDA,eAAeN,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({data, country}) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = (\n      dailyData[0]\n      ?(\n          <Line \n          data ={{\n              labels:dailyData.map(({date}) => date),\n              datasets: [{\n                  data:dailyData.map(({confirmed}) => confirmed),\n                  label: 'Infected',\n                  borderColor: '#3333ff',\n                  fill: true, \n              }, {\n                data:dailyData.map(({deaths}) => deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true, \n              }]\n          }}\n          />\n      ):null\n  );\n\n  const barChart =(\n    data.confirmed\n    ?(\n      <Bar data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [{\n          lablel:'People',\n          backgroundColor: [ 'rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)']\n        }]\n      }} options={{\n        legend: {display: false},\n        title: {display: true, text:'Current State in ${country}'},\n      }}\n      />\n    ): null\n  )\nreturn (\n    <div className={styles.container}>\n        {lineChart}\n    </div>\n)\n}\nexport default Chart;"]},"metadata":{},"sourceType":"module"}